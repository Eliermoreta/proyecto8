@page "/registro"
@inject NavigationManager NavMan 
@rendermode InteractiveServer
@using System.Text.Json
@inject IJSRuntime JSx

<h3>Agregar Visita</h3>

<EditForm Model="@visita" OnValidSubmit="@AgregarVisita">          
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="@visita.Nombre"></InputText>
    </div>
                                                                                                    
    <div class="mb-3">
        <label for="apellido" class="form-label">Apellido</label>
        <InputText id="apellido" class="form-control" @bind-Value="@visita.Apellido"></InputText>                    
    </div>

    <div class="mb-3">
        <label for="telefono" class="form-label">Telefono</label>
        <InputText id="telefono" class="form-control" @bind-Value="@visita.Telefono"></InputText>
    </div>

    <div class="mb-3">
        <label for="correo" class="form-label">Correo</label>
        <InputText id="correo" class="form-control" @bind-Value="@visita.Correo"></InputText>
    </div>

    <div class="text-center">
        <button type="submit" class="btn btn-primary">Guardar</button>
    </div>
</EditForm>

@code {
    private Visita visita = new Visita();

    List<Visita> visitas = new List<Visita>();                

    private async Task AgregarVisita()
    {
        visitas.Add(visita);

        await JSx.InvokeVoidAsync("localStorage.setItem", "visitas", JsonSerializer.Serialize(visitas));

        NavMan.NavigateTo("index");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var registrosJson = await JSx.InvokeAsync<string>("localStorage.getItem", "visitas");

            if (registrosJson != null)
            {
                visitas = JsonSerializer.Deserialize<List<Visita>>(registrosJson);
                await JSx.InvokeVoidAsync("alert", visitas.Count + " Registros Cargados");
                StateHasChanged();
            }
        }
    }
}